#!/usr/bin/env python3

import sys
sys.path.append('/autograder/source')
import logging
logging.basicConfig()
LOGGER = logging.getLogger('autograder')
LOGGER.setLevel(logging.INFO)
from utils import *

# cd /autograder/source
os.chdir(Config.SOURCE)
pending_messages = []
config = load_yaml(os.path.join(Config.SOURCE, 'config.yaml'))

limit = config.get('limit_submissions', -1)
if not limit == -1:
    num_submissions = number_submissions() + 1
    if num_submissions > limit:
        write_result(**SUBMISSIONS_EXCEEDED(limit))
        exit(0)
    else:
        pending_messages.append((NUM_SUBMISSIONS_INFO(num_submissions, limit)))

for file in config.get('required_files', []):
    #  check if required file is submitted
    if not is_submitted(file):
        write_result(**BAD_FORMAT(file))
        exit(0)
    #  copy submitted file to shared test directory
    shutil.copy(os.path.join(Config.SUBMITTED_SOURCE, file), Config.SOURCE)

# LOGGER.info(f'{os.listdir(Config.IO_TEST_DIR)}')
subprocess.call(['bash', f'{Config.SOURCE}/compile.sh'])
if os.path.exists('/autograder/source/unittests'):
    subprocess.call(['make', 'catch-essential'], cwd='/autograder/source/unittests')
LOGGER.info(f"{os.listdir()}")
run_tests(pending_messages)